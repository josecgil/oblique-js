// Generated by CoffeeScript 1.10.0
(function() {
  describe("Directive", function() {
    var Directive;
    Directive = ObliqueNS.Directive;
    it("must create a simple Directive with default values", function() {
      var SampleDirective, directive;
      SampleDirective = (function() {
        function SampleDirective() {}

        return SampleDirective;

      })();
      directive = new Directive("SampleDirective", SampleDirective);
      expect(directive.name).toBe("SampleDirective");
      expect(directive.callback).toBe(SampleDirective);
      return expect(directive.isGlobal).toBeFalsy();
    });
    it("must create a global Directive via constructor", function() {
      var SampleDirective, directive;
      SampleDirective = (function() {
        function SampleDirective() {}

        return SampleDirective;

      })();
      directive = new Directive("SampleDirective", SampleDirective, true);
      expect(directive.name).toBe("SampleDirective");
      expect(directive.callback).toBe(SampleDirective);
      return expect(directive.isGlobal).toBeTruthy();
    });
    it("must throw an error if created without params", function() {
      var SampleDirective;
      SampleDirective = (function() {
        function SampleDirective() {}

        return SampleDirective;

      })();
      return expect(function() {
        return new Directive();
      }).toThrow(new ObliqueNS.Error("Directive name must be an string"));
    });
    return it("must throw an error if created without a proper callback", function() {
      var SampleDirective;
      SampleDirective = (function() {
        function SampleDirective() {}

        return SampleDirective;

      })();
      return expect(function() {
        return new Directive("SampleDirective", 1);
      }).toThrow(new ObliqueNS.Error("Directive must be called with a 'Constructor Function/Class' param"));
    });
  });

}).call(this);
