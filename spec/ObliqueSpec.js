// Generated by CoffeeScript 1.7.1
(function () {
    describe("Oblique", function () {
        beforeEach(function (done) {
            Oblique().destroyInstance();
            this.oblique = Oblique();
            $("#fixture").html("");
            return done();
        });
        afterEach(function () {
            this.oblique.destroyInstance();
            return this.oblique = void 0;
        });
        it("On creation it has a default interval time", function () {
            return expect(this.oblique.getIntervalTimeInMs()).toBe(Oblique.DEFAULT_INTERVAL_MS);
        });
        it("We can change default interval time", function () {
            var newIntervaltimeMs;
            newIntervaltimeMs = 10000;
            this.oblique.setIntervalTimeInMs(newIntervaltimeMs);
            return expect(this.oblique.getIntervalTimeInMs()).toBe(newIntervaltimeMs);
        });
        it("We can't change default interval time to invalid value", function () {
            var error;
            try {
                this.oblique.setIntervalTimeInMs(-1);
                throw Error("It must throw an ObliqueError");
            } catch (_error) {
                error = _error;
                if (!(error instanceof ObliqueError)) {
                    throw Error("It must throw an ObliqueError");
                }
            }
        });
        it("If a register a Directive if calls it constructor when expression is in DOM", function (done) {
            var TestDirective, newHTML;
            TestDirective = (function () {
                function TestDirective(DOMElement) {
                    Oblique().destroyInstance();
                    done();
                }

                TestDirective.CSS_EXPRESSION = "*[data-test]";

                return TestDirective;

            })();
            this.oblique.registerDirective(TestDirective);
            this.oblique.setIntervalTimeInMs(10);
            newHTML = "<div data-test></div>";
            return $("#fixture").html(newHTML);
        });
        return it("If a register a Directive if calls it constructor with the correct DOM element", function (done) {
            var TestDirective, newHTML;
            TestDirective = (function () {
                function TestDirective(DOMElement) {
                    expect($(DOMElement).is("test[data-test]")).toBeTruthy();
                    Oblique().destroyInstance();
                    done();
                }

                TestDirective.CSS_EXPRESSION = "*[data-test]";

                return TestDirective;

            })();
            this.oblique.registerDirective(TestDirective);
            this.oblique.setIntervalTimeInMs(10);
            newHTML = "<test data-test></test>";
            return $("#fixture").html(newHTML);
        });
    });

}).call(this);
