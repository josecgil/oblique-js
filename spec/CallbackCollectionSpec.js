// Generated by CoffeeScript 1.8.0
(function() {
  describe("CallbackCollection", function() {
    var CallbackCollection, ObError;
    CallbackCollection = ObliqueNS.CallbackCollection;
    ObError = ObliqueNS.Error;
    it("must be empty when created", function() {
      var directives;
      directives = new CallbackCollection();
      return expect(directives.count()).toBe(0);
    });
    it("must has 1 item when I added one Directive", function() {
      var TestDirective, directives;
      TestDirective = (function() {
        function TestDirective() {}

        return TestDirective;

      })();
      directives = new CallbackCollection();
      directives.add("TestDirective", TestDirective);
      expect(directives.count()).toBe(1);
      return expect(directives.at(0)).toBe(TestDirective);
    });
    it("If I add an object that not is a Directive it throws an Error", function() {
      var directivesCollection;
      directivesCollection = new CallbackCollection();
      return expect(function() {
        return directivesCollection.add("Test", {});
      }).toThrow(new ObError("registerDirective must be called with a Directive 'Constructor/Class'"));
    });
    it("must return a directive by his name", function() {
      var TestDirective, TestDirective2, directives;
      TestDirective = (function() {
        function TestDirective() {}

        return TestDirective;

      })();
      TestDirective2 = (function() {
        function TestDirective2() {}

        return TestDirective2;

      })();
      directives = new CallbackCollection();
      directives.add("TestDirective", TestDirective);
      directives.add("TestDirective2", TestDirective2);
      return expect(directives.getCallbackByName("TestDirective")).toBe(TestDirective);
    });
    return it("must iterate by it's directives", function(done) {
      var TestDirective, TestDirective2, count, directives;
      TestDirective = (function() {
        function TestDirective() {}

        return TestDirective;

      })();
      TestDirective2 = (function() {
        function TestDirective2() {}

        return TestDirective2;

      })();
      directives = new CallbackCollection();
      directives.add("TestDirective", TestDirective);
      directives.add("TestDirective2", TestDirective2);
      count = 0;
      return directives.each(function(directiveName, directiveFn) {
        if (count === 0) {
          expect(directiveName).toBe("TestDirective");
          expect(directiveFn).toBe(TestDirective);
        }
        if (count === 1) {
          expect(directiveName).toBe("TestDirective2");
          expect(directiveFn).toBe(TestDirective2);
        }
        if (count === 1) {
          done();
        }
        return count++;
      });
    });
  });

}).call(this);
