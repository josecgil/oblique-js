// Generated by CoffeeScript 1.7.1
(function() {
  describe("DirectiveCollection", function() {
    var DirectiveCollection, ObError;
    DirectiveCollection = ObliqueNS.DirectiveCollection;
    ObError = ObliqueNS.Error;
    beforeEach(function() {});
    afterEach(function() {});
    it("must be empty when created", function() {
      var directives;
      directives = new DirectiveCollection();
      return expect(directives.count()).toBe(0);
    });
    it("must has 1 item when I added one Directive", function() {
      var TestDirective, directives;
      TestDirective = (function() {
        function TestDirective() {}

        return TestDirective;

      })();
      directives = new DirectiveCollection();
      directives.add(TestDirective);
      expect(directives.count()).toBe(1);
      return expect(directives.at(0)).toBe(TestDirective);
    });
    it("If I add an object that not is a Directive it throws an Error", function() {
      var directivesCollection;
      directivesCollection = new DirectiveCollection();
      return expect(function() {
        return directivesCollection.add({});
      }).toThrow(new ObError("registerDirective must be called with a Directive 'Constructor/Class'"));
    });
    return it("must return al directive by his name", function() {
      var TestDirective, TestDirective2, directives;
      TestDirective = (function() {
        function TestDirective() {}

        return TestDirective;

      })();
      TestDirective2 = (function() {
        function TestDirective2() {}

        return TestDirective2;

      })();
      directives = new DirectiveCollection();
      directives.add(TestDirective);
      directives.add(TestDirective2);
      return expect(directives.getDirectiveByName("TestDirective")).toBe(TestDirective);
    });
  });

}).call(this);
