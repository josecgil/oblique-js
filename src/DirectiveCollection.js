// Generated by CoffeeScript 1.8.0
(function() {
  var DirectiveCollection;

  this.ObliqueNS = this.ObliqueNS || {};

  DirectiveCollection = (function() {
    function DirectiveCollection() {
      this.directives = [];
      this._directivesByName = {};
    }

    DirectiveCollection.prototype.count = function() {
      return this.directives.length;
    };

    DirectiveCollection.prototype._isAFunction = function(memberToTest) {
      return typeof memberToTest === "function";
    };

    DirectiveCollection.NOT_A_FUNCTION_CLASS_ERROR_MESSAGE = "registerDirective must be called with a Directive 'Constructor/Class'";

    DirectiveCollection.prototype._throwErrorIfDirectiveIsNotValid = function(directiveName, directive) {
      if (!directiveName || typeof directiveName !== "string") {
        throw new ObliqueNS.Error("registerDirective must be called with a string directiveName");
      }
      if (!this._isAFunction(directive)) {
        throw new ObliqueNS.Error(ObliqueNS.DirectiveCollection.NOT_A_FUNCTION_CLASS_ERROR_MESSAGE);
      }
    };

    DirectiveCollection.prototype.add = function(directiveName, directiveFn) {
      this._throwErrorIfDirectiveIsNotValid(directiveName, directiveFn);
      this.directives.push(directiveFn);
      return this._directivesByName[directiveName] = directiveFn;
    };

    DirectiveCollection.prototype.at = function(index) {
      return this.directives[index];
    };

    DirectiveCollection.prototype.getDirectiveByName = function(directiveName) {
      return this._directivesByName[directiveName];
    };

    return DirectiveCollection;

  })();

  ObliqueNS.DirectiveCollection = DirectiveCollection;

}).call(this);
