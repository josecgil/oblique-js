// Generated by CoffeeScript 1.8.0
(function() {
  var Param, RangeParam,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  this.ObliqueNS = this.ObliqueNS || {};

  Param = ObliqueNS.Param;

  RangeParam = (function(_super) {
    __extends(RangeParam, _super);

    function RangeParam(name, min, max) {
      this.name = name;
      this.min = min;
      this.max = max;
      RangeParam.__super__.constructor.call(this, this.name);
      if (!this._isString(this.min)) {
        throw new ObliqueNS.Error("Param constructor must be called with second param string");
      }
      if (!this._isString(this.max)) {
        throw new ObliqueNS.Error("Param constructor must be called with third param string");
      }
    }

    RangeParam.prototype.getLocationHash = function() {
      return "" + this.name + "=(" + this.min + "," + this.max + ")";
    };

    RangeParam.prototype.isEmpty = function() {
      if (this.min === void 0 && this.max === void 0) {
        return true;
      }
      return false;
    };

    RangeParam.is = function(strHashParam) {
      var hashParam;
      hashParam = Param.parse(strHashParam);
      if (Param.containsChar(hashParam.value, "(")) {
        return true;
      }
      return false;
    };

    RangeParam.createFrom = function(strHashParam) {
      var hashParam, max, min, value;
      hashParam = Param.parse(strHashParam);
      value = hashParam.value.replace("(", "").replace(")", "");
      min = (value.split(",")[0]).trim();
      max = (value.split(",")[1]).trim();
      return new RangeParam(hashParam.name, min, max);
    };

    return RangeParam;

  })(ObliqueNS.Param);

  ObliqueNS.RangeParam = RangeParam;

}).call(this);
